// <auto-generated />
using System;
using HotelBookingAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelBookingAPI.Migrations
{
    [DbContext(typeof(HotelBookingContext))]
    [Migration("20250824180702_third migration")]
    partial class thirdmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelBookingAPI.Models.AuthModels.Role", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HotelBookingAPI.Models.AuthModels.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HotelBookingAPI.Models.DomainModels.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookingId");

                    b.HasIndex("GuestId");

                    b.HasIndex("RoomId");

                    b.HasIndex(new[] { "CheckInDate" }, "IX_Booking_CheckInDate");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            CheckInDate = new DateTime(2025, 8, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2025, 8, 26, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 8, 24, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestId = 1,
                            NumberOfGuests = 1,
                            RoomId = 1,
                            Status = "Confirmed",
                            TotalAmount = 4000m
                        },
                        new
                        {
                            BookingId = 2,
                            CheckInDate = new DateTime(2025, 8, 26, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2025, 8, 28, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 8, 24, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestId = 2,
                            NumberOfGuests = 2,
                            RoomId = 2,
                            Status = "Pending",
                            TotalAmount = 7000m
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Models.DomainModels.Guest", b =>
                {
                    b.Property<int>("GuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuestId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("GuestId");

                    b.HasIndex(new[] { "Email" }, "IX_Guest_Email_Unique")
                        .IsUnique();

                    b.HasIndex(new[] { "Phone" }, "IX_Guest_Phone_Unique")
                        .IsUnique();

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            GuestId = 1,
                            Address = "123 Street, City",
                            CreatedAt = new DateTime(2025, 8, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john@example.com",
                            FullName = "John Doe",
                            Phone = "9876543210"
                        },
                        new
                        {
                            GuestId = 2,
                            Address = "456 Avenue, City",
                            CreatedAt = new DateTime(2025, 8, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane@example.com",
                            FullName = "Jane Smith",
                            Phone = "9876543211"
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Models.DomainModels.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Floor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<decimal>("PricePerDay")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ViewType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoomId");

                    b.HasIndex("RoomTypeId");

                    b.HasIndex(new[] { "RoomNumber" }, "IX_Room_RoomNumber")
                        .IsUnique();

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            Capacity = 1,
                            CreatedAt = new DateTime(2025, 8, 24, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PricePerDay = 2000m,
                            RoomNumber = "101",
                            RoomTypeId = 1
                        },
                        new
                        {
                            RoomId = 2,
                            Capacity = 2,
                            CreatedAt = new DateTime(2025, 8, 24, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PricePerDay = 3500m,
                            RoomNumber = "102",
                            RoomTypeId = 2
                        },
                        new
                        {
                            RoomId = 3,
                            Capacity = 4,
                            CreatedAt = new DateTime(2025, 8, 24, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = true,
                            PricePerDay = 8000m,
                            RoomNumber = "201",
                            RoomTypeId = 3
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Models.DomainModels.RoomType", b =>
                {
                    b.Property<int>("RoomTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomTypeId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoomTypeId");

                    b.HasIndex(new[] { "TypeName" }, "IX_RoomType_TypeName")
                        .IsUnique();

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            RoomTypeId = 1,
                            CreatedAt = new DateTime(2025, 8, 24, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Single bed room",
                            IsActive = true,
                            TypeName = "Single"
                        },
                        new
                        {
                            RoomTypeId = 2,
                            CreatedAt = new DateTime(2025, 8, 24, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Double bed room",
                            IsActive = true,
                            TypeName = "Double"
                        },
                        new
                        {
                            RoomTypeId = 3,
                            CreatedAt = new DateTime(2025, 8, 24, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Luxury suite",
                            IsActive = true,
                            TypeName = "Suite"
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Models.AuthModels.User", b =>
                {
                    b.HasOne("HotelBookingAPI.Models.AuthModels.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HotelBookingAPI.Models.DomainModels.Booking", b =>
                {
                    b.HasOne("HotelBookingAPI.Models.DomainModels.Guest", "Guest")
                        .WithMany("Bookings")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBookingAPI.Models.DomainModels.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelBookingAPI.Models.DomainModels.Room", b =>
                {
                    b.HasOne("HotelBookingAPI.Models.DomainModels.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("HotelBookingAPI.Models.AuthModels.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("HotelBookingAPI.Models.DomainModels.Guest", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("HotelBookingAPI.Models.DomainModels.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("HotelBookingAPI.Models.DomainModels.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
